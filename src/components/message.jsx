import React, { useContext, useEffect, useRef } from 'react'
import '../css/message.css'
import { AuthContext } from '../context/authContext'
import { ChatContext } from '../context/chatContext'

const Message = ({message}) => {

  const {currentUser} = useContext(AuthContext);
  const {data} = useContext(ChatContext);

  const ref = useRef();

  useEffect(() => {
    ref.current?.scrollIntoView({ behavior: "smooth" });
  }, [message]);

  console.log(message)
  console.log(data)

  const getFormattedTime = (timestamp) => {
    const now = new Date();
    const messageTime = new Date(timestamp * 1000); // Convert to milliseconds
    const timeDifferenceInSeconds = Math.floor((now - messageTime)/1000);
  
    if (timeDifferenceInSeconds < 60) {
      return 'just now';
    } else if (timeDifferenceInSeconds < 3600) {
      const minutes = Math.floor(timeDifferenceInSeconds / 60);
      return `${minutes} min${minutes > 1 ? 's' : ''} ago`;
    } else {
      const hours = Math.floor(timeDifferenceInSeconds / 3600);
      return `${hours} hr${hours > 1 ? 's' : ''} ago`;
    }
  };


// Assuming message.date contains the local timestamp generated by timestamp.now()
const formattedTime = getFormattedTime(message.date);


  return (
    <div ref={ref} className={currentUser.uid === message.senderId ? "message owner" : 'message'}>
      <div className="messageInfo">
        <img src={message.senderId === currentUser.uid ? currentUser.photoURL : data.user.photoURL} alt="" />
        <span>{formattedTime}</span>
      </div>
      <div className="messageData">
        {message.img &&<img src={message.img} alt="" />}
        {message.text &&<p>{message.text}</p>}
      </div>
    </div>
  )
}

export default Message